"""Add registered_functions and mcp_servers tables

Revision ID: 756802b2928b
Revises: 001_add_tool_calling_support
Create Date: 2025-08-04 20:25:18.778342

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '756802b2928b'
down_revision = '001_add_tool_calling_support'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mcp_servers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=512), nullable=False),
    sa.Column('protocol', sa.String(length=50), nullable=False),
    sa.Column('api_key', sa.String(length=512), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_connected', sa.DateTime(timezone=True), nullable=True),
    sa.Column('connection_status', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('registered_functions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=False),
    sa.Column('code', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.drop_constraint(op.f('memories_subtenant_id_key_key'), 'memories', type_='unique')
    op.create_unique_constraint('_subtenant_key_uc', 'memories', ['subtenant_id', 'key'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('_subtenant_key_uc', 'memories', type_='unique')
    op.create_unique_constraint(op.f('memories_subtenant_id_key_key'), 'memories', ['subtenant_id', 'key'], postgresql_nulls_not_distinct=False)
    op.drop_table('registered_functions')
    op.drop_table('mcp_servers')
    # ### end Alembic commands ###