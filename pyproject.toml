[tool.poetry]
name = "llm-wrapper-service"
version = "0.1.0"
description = "A unified API wrapper for various LLM providers"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
psycopg2-binary = "^2.9.9"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
httpx = "^0.25.2"
openai = "^1.3.7"
anthropic = "^0.8.0"
redis = "^5.0.1"
sse-starlette = "^1.8.2"
opentelemetry-api = "^1.21.0"
opentelemetry-sdk = "^1.21.0"
opentelemetry-instrumentation-fastapi = "^0.43b0"
opentelemetry-instrumentation-sqlalchemy = "^0.43b0"
python-dotenv = "^1.0.0"
python-multipart = "^0.0.6"
aiofiles = "^23.2.1"
websockets = "^12.0"
psutil = "^5.9.6"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-mock = "^3.12.0"
pytest-dotenv = "^0.5.2"
black = "^23.11.0"
ruff = "^0.1.6"
mypy = "^1.7.1"
httpx = "^0.25.2"

[tool.pytest.ini_options]
asyncio_mode = "auto"
log_cli = true
log_cli_level = "INFO"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
select = ["E", "F", "I", "N", "W", "UP", "B", "C4", "SIM", "RUF"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true